# bot/commands/score.py
import discord
import pandas as pd
import asyncio
from discord import app_commands
from discord.ext import commands

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å Google Sheet ---

# URL ‡∏Ç‡∏≠‡∏á Google Sheet (‡πÄ‡∏´‡∏°‡∏∑‡∏≠‡∏ô‡πÄ‡∏î‡∏¥‡∏°)
SHEET_ID = "1ydK3l7Lks3p57Tmvxrhk3dqu5dVcOmNgBetvVrWnNyk"
# ‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡∏ó‡∏µ‡πà 12 (‡πÉ‡∏´‡∏°‡πà)
SHEET_URL = f"https://docs.google.com/spreadsheets/d/{SHEET_ID}/export?format=csv&gid=861657501"
# ‡∏™‡∏°‡∏°‡∏ï‡∏¥‡∏ê‡∏≤‡∏ô‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡πÑ‡∏ü‡∏•‡πå Excel:
# Col A (index 0): ID ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
# Col B (index 1): ‡∏ä‡∏∑‡πà‡∏≠‡∏ô‡∏≤‡∏°‡∏™‡∏Å‡∏∏‡∏•
# Col C-K (index 2-10): ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏¢‡πà‡∏≠‡∏¢
# Col L (index 11): ‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏°

def get_student_score(student_id: str):
    """
    ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏≤‡∏Å Google Sheet ‡πÇ‡∏î‡∏¢‡πÉ‡∏ä‡πâ ID (‡∏ó‡∏≥‡∏á‡∏≤‡∏ô‡πÅ‡∏ö‡∏ö blocking)
    """
    try:
        df = pd.read_csv(SHEET_URL)

        id_col = df.columns[0]
        name_col = df.columns[1]
        total_col = df.columns[11] 

        df[id_col] = df[id_col].astype(str)
        student_id = str(student_id)

        result_row = df[df[id_col] == student_id]

        if result_row.empty:
            return None

        student_data = result_row.iloc[0]

        # ‡∏î‡∏∂‡∏á‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏¢‡πà‡∏≠‡∏¢ (C ‡∏ñ‡∏∂‡∏á K)
        score_columns = df.columns[2:11] 
        detailed_scores = {}
        for col_name in score_columns:
            detailed_scores[col_name] = student_data[col_name]

        data_to_return = {
            "name": student_data[name_col],
            "total_score": student_data[total_col],
            "details": detailed_scores
        }
        
        return data_to_return

    except Exception as e:
        print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏≠‡πà‡∏≤‡∏ô Google Sheet: {e}")
        return None

# --- ‡∏™‡πà‡∏ß‡∏ô‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á‡∏Å‡∏±‡∏ö Bot ---

def register_score_command(bot: commands.Bot, guild: discord.Object):
    """
    ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏•‡∏á‡∏ó‡∏∞‡πÄ‡∏ö‡∏µ‡∏¢‡∏ô‡∏Ñ‡∏≥‡∏™‡∏±‡πà‡∏á /score ‡πÉ‡∏´‡πâ‡∏Å‡∏±‡∏ö bot
    """
    
    @bot.tree.command(name="score", description="‡∏Ñ‡πâ‡∏ô‡∏´‡∏≤‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏à‡∏≤‡∏Å ID", guild=guild)
    @app_commands.describe(student_id="ID ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ 68070xxx")
    async def score(interaction: discord.Interaction, student_id: str):
        """
        Slash command /score ‡∏ó‡∏µ‡πà‡∏£‡∏±‡∏ö ID ‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤
        """
        try:
            # 1. ‡πÅ‡∏à‡πâ‡∏á‡∏ß‡πà‡∏≤‡∏Å‡∏≥‡∏•‡∏±‡∏á‡∏ó‡∏≥‡∏á‡∏≤‡∏ô
            await interaction.response.defer()

            # 2. ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡πÉ‡∏ä‡πâ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô get_student_score ‡πÉ‡∏ô thread ‡πÅ‡∏¢‡∏Å
            loop = asyncio.get_running_loop()
            data = await loop.run_in_executor(None, get_student_score, student_id)

            # 3. ‡∏ï‡∏£‡∏ß‡∏à‡∏™‡∏≠‡∏ö‡∏ú‡∏•‡∏•‡∏±‡∏û‡∏ò‡πå
            if data is None:
                await interaction.followup.send(f"‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ô‡∏±‡∏Å‡∏®‡∏∂‡∏Å‡∏©‡∏≤ ID: `{student_id}` ‡∏Ñ‡∏£‡∏±‡∏ö")
                return

            # 4. ‡∏™‡∏£‡πâ‡∏≤‡∏á Embed ‡πÄ‡∏û‡∏∑‡πà‡∏≠‡∏ï‡∏≠‡∏ö‡∏Å‡∏•‡∏±‡∏ö
            student_name = data['name']
            total_score = data['total_score']
            
            embed = discord.Embed(
                title=f"üìä ‡∏£‡∏≤‡∏¢‡∏á‡∏≤‡∏ô‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô: {student_name}",
                description=f"**ID:** {student_id}",
                color=discord.Color.blue()
            )

            # 5. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏¢‡πà‡∏≠‡∏¢ (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå C-K)
            for score_name, score_value in data['details'].items():
                if "Unnamed" not in score_name: # ‡∏Å‡∏±‡∏ô‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå‡∏ß‡πà‡∏≤‡∏á
                    embed.add_field(name=score_name, value=str(score_value), inline=True)
            
            # 6. ‡πÄ‡∏û‡∏¥‡πà‡∏°‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏° (‡∏à‡∏≤‡∏Å‡∏Ñ‡∏≠‡∏•‡∏±‡∏°‡∏ô‡πå L)
            embed.add_field(name="-"*30, value="", inline=False) # ‡πÄ‡∏™‡πâ‡∏ô‡∏Ñ‡∏±‡πà‡∏ô
            embed.add_field(
                name="‡∏Ñ‡∏∞‡πÅ‡∏ô‡∏ô‡∏£‡∏ß‡∏° (Column L)", 
                value=f"**{total_score}**", 
                inline=False
            )

            await interaction.followup.send(embed=embed)

        except Exception as e:
            print(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô command /score: {e}")
            await interaction.followup.send(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {e}")

    print("‚úÖ 'score' command registered.")